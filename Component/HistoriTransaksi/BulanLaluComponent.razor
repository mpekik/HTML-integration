@using Microsoft.AspNetCore.Components
@using HTML_integration.Data
@using System.Threading

@inject Transaksi trx
@inject Printer print 
@inject Nasabah nsb

<div class="col-md-8" style="margin-top: 6.5%;">
    <h2 id="" class="teks-hello2">Hello, <b class="nama-pelanggan">@nsb.Nama</b></h2>
    <p id="" class="teks-desc4">Anda akan mencetak transaksi</p>
    <p id="" class="periode-terpilih">Periode bulan berjalan</p>
    <p id="" class="waktu-periode">@dateStart - @dateEnd</p>
    <div id="" style="text-align: center; margin-top: 10%;">
        <p><button @onclick="CheckVisible" type="button" class="btn btn-danger2" id="myBtn">Ya</button></p>
        <p><button @onclick="@(()=>OnClick.InvokeAsync("formtransaksi"))" type="button" class="btn btn-danger-no">Tidak</button></p>
    </div>
</div>
@if (isVisible)
{
    <div class="modal" id="myModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <img src="../../assets/image/loading.gif" style="width: 30%;">
                    <p>Mohon tunggu,</p>
                    <p style="margin-top: -1rem;">Histori transaksi sedang dicetak...</p>
                </div>
            </div>
        </div>
    </div>
}


@code {
    private bool isVisible = false;
    private string dateStart = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).AddMonths(-1).ToString("dd/MM/yyyy");
    private string dateEnd = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).AddDays(-1).ToString("dd/MM/yyyy");
    private string[] ket = { "Debit", "Kredit" };

    [Parameter]
    public EventCallback<string> OnClick { get; set; }


    private async Task CheckVisible()
    {
        isVisible = !isVisible;

        //ToDO Get Data From Dbase
        //ToDo Print Function
        await Task.Delay(10000);
        Random rng = new Random();
        int next = rng.Next(0, 1);
        if (next == 0)
        {
            for (int i = 0; i <20; i++)
            {
                Random rnd = new Random();
                int next2 = rnd.Next(0, 5);
                int jml = 0;
                string kode = string.Empty;
                string keterangan = string.Empty;
                if (next == 0)
                {
                    keterangan = ket[0];
                    jml -= rnd.Next(10000000);
                    kode = "DBT";
                }
                else
                {
                    keterangan = ket[1];
                    jml += rnd.Next(10000000);
                    kode = "CRT";
                }
                trx.SetHistori(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).AddMonths(-1).AddDays(i).ToString("dd/MM/yyyy"), keterangan, kode, jml);
            }
            await print.PrintA4(trx);
            isVisible = !isVisible;
            OnClick.InvokeAsync("historiberhasil");

        }
        else
            OnClick.InvokeAsync("historigagal");

    }
}